{"version":3,"sources":["components/Hero.js","components/Header.js","constants/appConstants.js","components/CampaignTabs.js","components/CampaignTable.js","containers/ManageCampaignContainer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Hero","props","class","Header","appContants","TAB_TITLES","UPCOMING_CAMPAIGNS","PAST_CAMPAIGNS","LANG_LIST","ENGLISH","HINDI","CAMPAIGNS_LIST","id","campaign","date","happensAt","daysAheadAgo","iconUrl","CampaignTabs","handleTabClick","onClick","e","appConstants","LIVE_CAMPAIGNS","CampaignTable","campaignsCal","selectedTab","campaigns","filter","ele","calculateDays","map","i","Math","abs","handleViewClick","activateDatePicker","isDatePickerActive","onChange","handleDateChange","ManageCampaignContainer","tab","setState","handleRescheduleClick","alert","target","innerHTML","handleModalOpen","isViewModalOpen","selectedCampaign","handleModalClose","moment","diff","deactivateDatePicker","state","selectedLanguage","tabs","this","isModalOpen","Modal","className","open","onClose","hideBackdrop","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e6aa9bed.chunk.js","sourcesContent":["import React from 'react';\nimport './Hero.css';\n\nexport default function Hero(props) {\n    return (\n        <div class=\"hero\">\n            <div class=\"hero__text\">MANAGE CAMPAIGNS</div>\n        </div>\n    );\n};","import React from 'react';\nimport './Header.css';\n\nexport default function Header(props) {\n    return (\n        <div class=\"header\">\n            <span class=\"header__spotlight\">Spotlight</span>\n            <span class=\"header__beta\">BETA</span>\n            <span class=\"header__options\">?</span>\n        </div>\n    );\n};","import moment from 'moment';\n\nconst appContants = {\n    TAB_TITLES: {\n        UPCOMING_CAMPAIGNS : \"UPCOMING CAMPAIGNS\",\n        PAST_CAMPAIGNS: \"PAST CAMPAIGNS\"\n    },\n    LANG_LIST: {\n        ENGLISH: 'english',\n        HINDI: 'hindi'\n    },\n    CAMPAIGNS_LIST: [\n        {\n            id: 1,\n            campaign: \"Test Whatsapp\",\n            date: '2011-01-01 00:00Z',\n            happensAt: '2011-01-01 00:00Z',\n            daysAheadAgo: 'sdf',\n            iconUrl: \"../../public/assets\"\n        },\n        {\n            id: 2,\n            campaign: \"Super jewels Quest\",\n            date: '2011-03-01 00:00Z',\n            happensAt: '2029-01-01 00:00Z',\n            daysAheadAgo: 'sdf',\n            iconUrl: \"../../public/assets\"\n        },\n        {\n            id: 3,\n            campaign: \"Mole Slayer\",\n            date: '2020-04-07 00:00Z',\n            happensAt: '2011-01-01 00:00Z',\n            daysAheadAgo: 'sdf',\n            iconUrl: \"../../public/assets\"\n        },\n        {\n            id: 4,\n            campaign: \"Mancala Mix\",\n            date: '201-01-01 00:00Z',\n            happensAt: '2011-01-01 00:00Z',\n            daysAheadAgo: 'sdf',\n            iconUrl: \"../../public/assets\"\n        }\n    ]\n}\n\nexport default appContants;\n\n","import React from 'react';\nimport './CampaignTabs.css';\nimport appConstants from '../constants/appConstants';\n\nexport default function CampaignTabs(props) {\n    const {handleTabClick} = props;\n    return (\n        <div class=\"tabs\">\n            <span class=\"ind-tab\" onClick={(e) => {handleTabClick(appConstants.TAB_TITLES.UPCOMING_CAMPAIGNS)}}>UPCOMING CAMPAIGNS</span>\n            <span class=\"ind-tab\" onClick={(e) => {handleTabClick(appConstants.TAB_TITLES.LIVE_CAMPAIGNS)}}>PAST CAMPAIGNS</span>\n            <span class=\"ind-tab\" onClick={(e) => {handleTabClick(appConstants.TAB_TITLES.PAST_CAMPAIGNS)}}>LIVE CAMPAIGNS</span>\n        </div>\n    );\n};","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport appContants from '../constants/appConstants';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './CampaignTable.css';\n\nexport default function CampaignTable(props) {\n    let campaignsCal = props.selectedTab === appContants.TAB_TITLES.UPCOMING_CAMPAIGNS\n    ?\n    props.campaigns.filter((ele) => {\n        return props.calculateDays(ele)>0\n    })\n    :\n    props.campaigns.filter((ele) => {\n        return props.calculateDays(ele)<0\n    });\n    return (\n        <div class=\"campaign-table\">\n            <div class=\"campaign-table-header\">\n                <span class=\"campaign-table-header-col\">S. No.</span>\n                <span class=\"campaign-table-header-col\">DATE</span>\n                <span class=\"campaign-table-header-col\">DAYS</span>\n                <span class=\"campaign-table-header-col\">CAMPAIGN</span>\n                <span class=\"campaign-table-header-col\">VIEW</span>\n                <span class=\"campaign-table-header-col\">ACTIONS</span>\n            </div>\n            {campaignsCal.map((ele, i) => {\n                return  (\n                <div>\n                    <ul class=\"campaign-table-item\">\n                        <li class=\"campaign-table-item-col\">{ele.id}</li>\n                        <li class=\"campaign-table-item-col\">{ele.happensAt}</li>\n                        <li class=\"campaign-table-item-col\">{props.calculateDays(ele)<0 ? Math.abs(props.calculateDays(ele)) + \" days before\" : props.calculateDays(ele) + \" days later\" }</li>\n                        <li class=\"campaign-table-item-col\">{ele.campaign}</li>\n                        <li class=\"campaign-table-item-col\">{ele.daysAheadAgo}</li>\n                        <li class=\"campaign-table-item-col\">\n                            <span class=\"actions-items\" onClick={(e) => {props.handleViewClick(e, ele)}}>View</span> &nbsp;&nbsp;\n                            <span class=\"actions-items\" onClick={(e) => {props.activateDatePicker(e, ele)}}>Re-Schedule</span>\n                            {props.isDatePickerActive && <DatePicker onChange={(date) => {props.handleDateChange(date)}}></DatePicker>}\n                        </li>\n                    </ul>\n                </div>\n                )\n            })}\n        </div>\n    );\n};","import React from 'react';\nimport moment from 'moment';\nimport appContants from '../constants/appConstants';\nimport CampaignTabs from '../components/CampaignTabs';\nimport CampaignTable from '../components/CampaignTable';\nimport { Modal } from '@material-ui/core';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class ManageCampaignContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: appContants.TAB_TITLES.UPCOMING_CAMPAIGNS,\n            selectedLanguage: appContants.LANG_LIST.ENGLISH,\n            isViewModalOpen: false,\n            selectedCampaign: null,\n            isDatePickerActive: false\n        };\n    }\n\n    handleTabClick = (tab) => {\n        this.setState({\n            selectedTab: tab\n        })\n    }\n\n    handleRescheduleClick = (e) => {\n        alert(e.target.innerHTML);\n    }\n\n    handleModalOpen = (e, ele) => {\n        this.setState({\n            isViewModalOpen: true,\n            selectedCampaign: ele\n        })\n    }\n\n    handleModalClose = () => {\n        this.setState({\n            isViewModalOpen: false\n        })\n    }\n\n    calculateDays = (campaign) => {\n        let diff = moment(campaign.happensAt).diff(moment(), 'day');\n        return diff;\n    }\n\n    activateDatePicker = (e, ele) => {\n        this.setState({\n            isDatePickerActive:true,\n            selectedCampaign: ele\n        })\n    }\n\n    deactivateDatePicker = () => {\n        this.setState({\n            isDatePickerActive:false\n        })\n    }\n\n    handleDateChange = (date) => {\n        this.selectedCampaign.happensAt = moment(date);\n    }\n\n\n    render() {\n        return (\n            <div class=\"manage-capaign-container\">\n                <div class=\"campaign-tabs\">\n                    <CampaignTabs tabs={appContants.TAB_TITLES} handleTabClick={this.handleTabClick} selectedTab={this.state.selectedTab}></CampaignTabs>\n                </div>\n                <div class=\"campaign-table-container\">\n                    <CampaignTable\n                        campaigns={appContants.CAMPAIGNS_LIST}\n                        handleRescheduleClick={this.handleRescheduleClick}\n                        handleViewClick={this.handleModalOpen}\n                        isModalOpen={this.state.isViewModalOpen}\n                        calculateDays={this.calculateDays}\n                        activateDatePicker={this.activateDatePicker}\n                        deactivateDatePicker={this.deactivateDatePicker}\n                        isDatePickerActive={this.state.isDatePickerActive}\n                        handleDateChange={this.handleDateChange}\n                        selectedTab={this.state.selectedTab}>\n                    </CampaignTable>\n                </div>\n                    <Modal className=\"modal-content\" open={this.state.isViewModalOpen} onClose={this.handleModalClose} hideBackdrop={false}>\n                        <div class=\"modal-details\">\n                            <div class=\"modal-items\">campaign name: {this.state.selectedCampaign && this.state.selectedCampaign.campaign} </div>\n                            <div class=\"modal-items\">date: {this.state.selectedCampaign && this.state.selectedCampaign.happensAt}</div>\n                            <div class=\"modal-items\">days: {this.state.selectedCampaign && (this.calculateDays(this.state.selectedCampaign) < 0 ? Math.abs(this.calculateDays(this.state.selectedCampaign)) + ' days before': this.calculateDays(this.state.selectedCampaign) + ' days later')} </div>\n                        </div>\n                    </Modal>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Hero from './components/Hero';\nimport Header from './components/Header';\nimport ManageCampaignContainer from './containers/ManageCampaignContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header></Header>\n      </header>\n      <div>\n          <Hero></Hero>\n          <ManageCampaignContainer></ManageCampaignContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}